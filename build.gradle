buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-Forge-" + project.mod_version
group = project.maven_group
var realVersion = project.mod_version + '+forge'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: minecraft_version

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                jadeaddons {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                jadeaddons {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
    maven { url "https://api.modrinth.com/maven" }
    flatDir {
        dir 'libs'
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    implementation fg.deobf("curse.maven:jei-238222:4609866")
    implementation fg.deobf("maven.modrinth:jade:11.9.4+forge")
    implementation fg.deobf("curse.maven:kiwi-303657:4592974")
    //implementation fg.deobf("libs:Jade-1.19.1:forge-8.4.1")
    implementation fg.deobf("curse.maven:curios-309927:4583413")

    //implementation fg.deobf("curse.maven:secret-rooms-59652:4098367")

    //implementation fg.deobf("curse.maven:mantle-74924:3829975")
    //implementation fg.deobf("curse.maven:tinkers-construct-74072:3829979")

    //https://www.curseforge.com/minecraft/mc-mods/create/files/all?page=1&pageSize=20
    implementation fg.deobf("curse.maven:create-328085:4835191")
    //implementation fg.deobf("curse.maven:flywheel-486392:3864518")

    implementation fg.deobf("curse.maven:deep-resonance-233398:4598264")
    implementation fg.deobf("curse.maven:rftools-base-326041:4598236")
    implementation fg.deobf("curse.maven:mcjtylib-233105:4598235")

    implementation fg.deobf("curse.maven:the-one-probe-245211:4629624")

    //implementation fg.deobf("curse.maven:thermal-expansion-69163:3837868")
    //implementation fg.deobf("curse.maven:thermal-foundation-222880:3837827")
    //implementation fg.deobf("curse.maven:cofh-core-69162:3838025")

    implementation fg.deobf("curse.maven:lootr-361276:5420132")

    implementation fg.deobf("curse.maven:ender-io-64578:5549669")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : realVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

unifiedPublishing {
    project {
        displayName = "[Forge $project.supported_version] $project.mod_version"
        version = realVersion // Optional, Inferred from project by default
        changelog = file("CHANGELOG.md").exists() ? file("CHANGELOG.md").text : "" // Optional, in markdown format
        releaseType = project.release_type // Optional, use "release", "beta" or "alpha"
        gameVersions = ["1.20", "1.20.1"]
        gameLoaders = ["forge", "neoforge"]

        mainPublication tasks.jar // Declares the publicated jar

        if (System.getenv("CURSE_TOKEN") != null) {
            curseforge {
                token = System.getenv("CURSE_TOKEN")
                id = "583345" // Required, must be a string, ID of CurseForge project

                relations { // Optional, Inferred from the relations above by default
                    depends "jade"
                }
            }
        }

        if (System.getenv("MODRINTH_TOKEN") != null) {
            modrinth {
                token = System.getenv("MODRINTH_TOKEN")
                id = "xuDOzCLy" // Required, must be a string, ID of Modrinth project

                relations { // Optional, Inferred from the relations above by default
                    depends "jade"
                }
            }
        }
    }
}